---
name: Compilation & tests

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - develop
    tags:
      - '**'
  pull_request:
    paths-ignore:
      - '.github/workflows/*.yml'

jobs:
  nano_build:
    name: Build application using the reusable workflow
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_build.yml@v1
    with:
      upload_app_binaries_artifact: compiled_app_binaries
      run_for_devices: '["nanos", "nanox", "nanosp"]'

  nano_test:
    name: Run ragger tests using the reusable workflow
    needs: nano_build
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_ragger_tests.yml@v1
    with:
      download_app_binaries_artifact: compiled_app_binaries
      test_dir: tests/functional
      run_for_devices: '["nanos", "nanox", "nanosp"]'

  nano_scan:
    name: Clang Static Analyzer
    strategy:
      matrix:
        include:
          - SDK: "$NANOS_SDK"
            model: nanos
          - SDK: "$NANOX_SDK"
            model: nanox
          - SDK: "$NANOSP_SDK"
            model: nanosp
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Build with Clang Static Analyzer
        run: |
          make clean
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -disable-checker core.VLASize -o scan-build --status-bugs make -j BOLOS_SDK=${{ matrix.SDK }}

      - name: Upload scan result
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build
